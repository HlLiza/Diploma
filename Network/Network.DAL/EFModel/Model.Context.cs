//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Network.DAL.EFModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;

    public partial class NetworkContext : DbContext
    {
        public NetworkContext()
            : base("name=NetworkContext")
        {
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }

        public virtual DbSet<Aducation> Aducation { get; set; }
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUserRoles> AspNetUserRoles { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<Conference> Conference { get; set; }
        public virtual DbSet<Group> Group { get; set; }
        public virtual DbSet<ListenerConfer> ListenerConfer { get; set; }
        public virtual DbSet<MemberOfGroup> MemberOfGroup { get; set; }
        public virtual DbSet<MembersOfConference> MembersOfConference { get; set; }
        public virtual DbSet<ReportConference> ReportConference { get; set; }
        public virtual DbSet<ResourceGroup> ResourceGroup { get; set; }
        public virtual DbSet<User> User { get; set; }

        //    public virtual ObjectResult<Conference> GetAllConf()
        //    {
        //        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Conference>("GetAllConf");
        //    }

        //    public virtual ObjectResult<Conference> GetAllConf(MergeOption mergeOption)
        //    {
        //        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Conference>("GetAllConf", mergeOption);
        //    }

        //    public virtual ObjectResult<ReportConference> SearchFTS(string keyWord)
        //    {
        //        var keyWordParameter = keyWord != null ?
        //            new ObjectParameter("KeyWord", keyWord) :
        //            new ObjectParameter("KeyWord", typeof(string));

        //        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportConference>("SearchFTS", keyWordParameter);
        //    }

        //    public virtual ObjectResult<ReportConference> SearchFTS(string keyWord, MergeOption mergeOption)
        //    {
        //        var keyWordParameter = keyWord != null ?
        //            new ObjectParameter("KeyWord", keyWord) :
        //            new ObjectParameter("KeyWord", typeof(string));

        //        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportConference>("SearchFTS", mergeOption, keyWordParameter);
        //    }
        //}
    }
}
